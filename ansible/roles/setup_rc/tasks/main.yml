---

- name: Setup ~/codespace
  file: name="{{ item }}" state=directory
  with_items:
  - "{{ ansible_env.HOME }}/codespace"
  - "{{ ansible_env.HOME }}/bin"
  - "{{ ansible_env.HOME }}/.pip"
  ignore_errors: yes

- name: Clone rcfiles
  git: repo="https://github.com/menghan/{{ item }}"
       update=yes
       dest="{{ ansible_env.HOME }}/codespace/{{ item }}"
       recursive=yes
       track_submodules=yes
  with_items:
  - menghanrc
  - vimfiles
  ignore_errors: yes

- name: Symbol rcfiles
  file: src="{{ ansible_env.HOME }}/codespace/{{ item.src }}" dest="{{ ansible_env.HOME }}/{{ item.dest }}" state=link
  with_items:
  - { src: "menghanrc/dot-bashrc/bashrc.basic", dest: ".bashrc.basic" }
  - { src: "menghanrc/dot-bashrc/bashrc.aliases", dest: ".bashrc.aliases" }
  - { src: "menghanrc/dot-gitconfig", dest: ".gitconfig" }
  - { src: "menghanrc/dot-gitignore", dest: ".gitignore" }
  - { src: "menghanrc/dot-toprc", dest: ".toprc" }
  - { src: "menghanrc/dot-tmux.conf", dest: ".tmux.conf" }
  - { src: "menghanrc/dot-tigrc", dest: ".tigrc" }
  - { src: "menghanrc/dot-pip-conf", dest: ".pip/pip.conf" }
  - { src: "menghanrc/bin/git-md", dest: "bin/git-md" }
  - { src: "menghanrc/bin/git-ps", dest: "bin/git-ps" }
  - { src: "menghanrc/bin/git-st", dest: "bin/git-st" }
  - { src: "menghanrc/bin/git-td", dest: "bin/git-td" }
  - { src: "menghanrc/bin/retry", dest: "bin/retry" }
  - { src: "menghanrc/bin/srt_mt.py", dest: "bin/srt_mt.py" }
  - { src: "menghanrc/bin/calcsum", dest: "bin/calcsum" }
  - { src: "menghanrc/bin/punzip", dest: "bin/punzip" }
  - { src: "menghanrc/bin/jsonpretty", dest: "bin/jsonpretty" }
  ignore_errors: yes

- name: Touch files
  file: dest="{{ ansible_env.HOME }}/{{ item }}" state=touch
  with_items:
  - .bashrc.local
  - .bashrc
  - .bash_profile
  ignore_errors: yes

- name: Setup .bashrc
  lineinfile: dest="{{ ansible_env.HOME }}/.bashrc" state=present regexp="{{ item.regexp }}" line="{{ item.line }}"
  with_items:
  - { regexp: '.bashrc.basic', line: 'source ~/.bashrc.basic' }
  - { regexp: '.bashrc.aliases', line: 'source ~/.bashrc.aliases' }
  - { regexp: '.bashrc.local', line: 'source ~/.bashrc.local' }

- name: Setup .bash_profile
  lineinfile: dest="{{ ansible_env.HOME }}/.bash_profile" state=present regexp=".bashrc" line="[ -f ~/.bashrc ] && source ~/.bashrc"

- name: Test if vim is installed
  command: which vim
  ignore_errors: yes
  register: which_vim

- name: Symbol vim rcfiles
  file: src="{{ ansible_env.HOME }}/codespace/{{ item.src }}" dest="{{ ansible_env.HOME }}/{{ item.dest }}" state=link
  with_items:
  - { src: "vimfiles", dest: ".vim" }
  - { src: "vimfiles/Additions/_vimrc.linux", dest: ".vimrc" }
  - { src: "vimfiles/Additions/_gvimrc.linux", dest: ".gvimrc" }
  when: which_vim.rc == 0

- name: Vim update bundles
  command: vim -c 'BundleInstall' -c qa
  when: which_vim.rc == 0
