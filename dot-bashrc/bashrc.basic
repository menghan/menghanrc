export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR=vim
ssh-add 2> /dev/null
stty -ixon > /dev/null 2>&1

if [[ ! $PATH =~ "$HOME/.local/bin" ]]; then
	export PATH="$HOME/.local/bin:$PATH"
fi
if [[ ! $PATH =~ "$HOME/bin" ]]; then
	export PATH="$HOME/bin:$PATH"
fi

safe_source ()
{
	if [ -f "$1" ]; then
		source "$1"
	fi
}
export -f safe_source

builddebpackage ()
{
	sudo dpkg-buildpackage -rfakeroot -uc -b
}
export -f builddebpackage

mktar ()
{
	if [ -f $1 ]; then
		gzip $1
	elif [ -d $1 ]; then
		tar czf $(dirname $1)/$(basename $1).tar.gz $1 && rm $1 -rf
	fi
}
export -f mktar

uptag ()
{
	ctags -R . && cscope -Rbkq
}
export -f uptag

if [ -f ~/.bashrc.IP ]; then
	. ~/.bashrc.IP
	export PS1="[\u@$SOMEIP(\h) \W]\$ "
fi
if [ -f ~/.pythonstartup ]; then
	export PYTHONSTARTUP=~/.pythonstartup
fi
if [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
else
	if [[ `uname -a` =~ "Darwin" ]]; then
		if [ -f `brew --prefix`/etc/bash_completion ]; then
			. `brew --prefix`/etc/bash_completion
		else
			# for mac ports
			if [ -f /opt/local/etc/bash_completion ]; then
				. /opt/local/etc/bash_completion
			fi
		fi
	fi
fi

parse_svn_branch() {
    parse_svn_url | sed -e 's#^'"$(parse_svn_repository_root)"'##g' | awk '{print " (svn::"$1") " }'
}
parse_svn_url() {
    svn info 2>/dev/null | sed -ne 's#^URL: ##p'
}
parse_svn_repository_root() {
    svn info 2>/dev/null | sed -ne 's#^Repository Root: ##p'
}

parse_git_branch() {
	branch=$(git branch 2>/dev/null | awk '/\*/ {print $2}')
	if [ -n "$branch" ]; then
		echo " (git::$branch) "
	fi
}

parse_hg_branch() {
	branch=$(hg branch 2>/dev/null)
	if [ -n "$branch" ]; then
		echo " (hg::$branch) "
	fi
}

parse_branch() {
	if [[ ! $PWD =~ "douban" ]]; then
		return
	fi
	branch=$(parse_git_branch)
	if [ -n "$branch" ]; then
		echo -n "$branch"
		return
	fi
	branch=$(parse_svn_branch)
	if [ -n "$branch" ]; then
		echo -n "$branch"
		return
	fi
	branch=$(parse_hg_branch)
	if [ -n "$branch" ]; then
		echo -n "$branch"
		return
	fi
}


BLACK="\[\033[0;38m\]"
RED="\[\033[0;31m\]"
RED_BOLD="\[\033[01;31m\]"
BLUE="\[\033[01;34m\]"
GREEN="\[\033[0;32m\]"

export PS1="\u@\h:\w$RED_BOLD\$(parse_branch)$BLACK\$ "
