export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR=vim
ssh-add 2> /dev/null
stty -ixon > /dev/null 2>&1

replace_path_out ()
{
	PATH=":$PATH:"
	PATH=${PATH/:$1:/:}
	export PATH=${PATH:1}
	if [ "x$PATH" != "x" ]; then
		export PATH=${PATH:0:$((${#PATH} - 1))}
	fi
}

replace_path_out /usr/local/bin
replace_path_out /usr/bin
replace_path_out /bin
replace_path_out /usr/local/sbin
replace_path_out /usr/sbin
replace_path_out /sbin
replace_path_out "$HOME/.local/bin"
replace_path_out "$HOME/Library/Python/2.7/bin"
replace_path_out "$HOME/bin"
export PATH="$HOME/bin:$HOME/Library/Python/2.7/bin:$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:$PATH"

safe_source ()
{
	if [ -f "$1" ]; then
		source "$1"
	fi
}
export -f safe_source

mktar ()
{
	if [ -f $1 ]; then
		gzip $1
	elif [ -d $1 ]; then
		tar czf $(dirname $1)/$(basename $1).tar.gz $1 && rm $1 -rf
	fi
}
export -f mktar

uptag ()
{
	ctags -R . && cscope -Rbkq
}
export -f uptag

if [ -f ~/.pythonstartup ]; then
	export PYTHONSTARTUP=~/.pythonstartup
fi
safe_source /etc/bash_completion
if [[ `uname` =~ "Darwin" ]]; then
	safe_source /usr/local/etc/bash_completion
fi

export GIT_AUTHOR_NAME="Menghan"

parse_svn_branch() {
	parse_svn_url | sed -e 's#^'"$(parse_svn_repository_root)"'##g' | awk '{print " (svn::"$1") " }'
}
parse_svn_url() {
	svn info 2>/dev/null | sed -ne 's#^URL: ##p'
}
parse_svn_repository_root() {
	svn info 2>/dev/null | sed -ne 's#^Repository Root: ##p'
}

parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -n '/*/ s/* //p'
}

parse_hg_branch() {
	branch=$(hg branch 2>/dev/null)
	if [ -n "$branch" ]; then
		echo " (hg::$branch) "
	fi
}

parse_branch() {
	branch=$(parse_git_branch)
	if [ -n "$branch" ]; then
		echo -n " (git::$branch) "
		return
	fi
	# if [[ ! $PWD =~ "douban" ]]; then
	#         return
	# fi
	# branch=$(parse_svn_branch)
	# if [ -n "$branch" ]; then
	#         echo -n "$branch"
	#         return
	# fi
	# branch=$(parse_hg_branch)
	# if [ -n "$branch" ]; then
	#         echo -n "$branch"
	#         return
	# fi
}


BLACK="\[\033[0;38m\]"
RED="\[\033[0;31m\]"
RED_BOLD="\[\033[01;31m\]"
BLUE="\[\033[01;34m\]"
GREEN="\[\033[0;32m\]"

export PS1="\u@\h:\w$RED_BOLD\$(parse_branch)$BLACK\$ "

# autojump
if [[ `uname` =~ "Darwin" ]]; then
	[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh
fi

osxnotify () {
	terminal-notifier -message "\"$@\""
}

th()
{
	if [[ x"$1" == "x" ]]; then
		tmux ls
	else
		tmux attach -t $1
	fi
}
